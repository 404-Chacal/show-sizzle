// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id               String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String
  original_title   String
  overview         String?
  release_date     String
  poster_image     String?
  background_image String?
  published        Boolean
  genres           Genre[]
  video            Video?  @relation(fields: [videoId], references: [id])

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
  videoId   String?

  @@index([id, createdAt])
  @@map("movie")
}

model TvShow {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String
  original_title   String
  overview         String?
  release_date     String
  poster_image     String?
  background_image String?
  published        Boolean
  // prisma relationships
  genres           Genre[]
  seasons          Season[]

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  @@index([id, createdAt])
  @@map("tvshow")
}

model Season {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String
  season_number   Int
  season_overview String?
  poster_image    String?
  release_date    String?
  isPublished     Boolean   @default(false)
  // prisma relationships
  episodes        Episode[]
  // prisma relationship ids
  tvshow          TvShow?   @relation(fields: [tvshowId], references: [id])
  tvshowId        String?   @db.Uuid

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  @@index([id, createdAt])
  @@map("season")
}

// prisma model for the episode

model Episode {
  id               String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String
  overview         String?
  episode_number   Int
  release_date     String?
  background_image String?
  isPublished      Boolean @default(false)
  // prisma relationships
  season           Season? @relation(fields: [seasonId], references: [id])
  video            Video?  @relation(fields: [videoId], references: [id])

  // prisma relationship ids
  seasonId String? @db.Uuid

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
  videoId   String?

  @@index([id, createdAt])
  @@map("episode")
}

// prisma model for the genres of the current tvshow
model Genre {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title    String
  // prisma relationships
  movie    Movie?  @relation(fields: [movieId], references: [id])
  tvshow   TvShow? @relation(fields: [tvShowId], references: [id])
  // prisma relationship ids
  movieId  String? @db.Uuid
  tvShowId String? @db.Uuid

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  @@index([id, createdAt])
  @@map("genre")
}

// prisma model for the videos of the movie and episode
model Video {
  id     String  @id @unique
  title  String
  type   String
  format String
  link   String
  movie  Movie[]

  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  episode   Episode[]

  @@index([id, createdAt])
  @@map("video")
}
