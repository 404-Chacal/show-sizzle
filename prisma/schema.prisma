generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id               String   @id @default(cuid())
  title            String
  original_title   String
  overview         String?
  release_date     String
  poster_image     String?
  background_image String?
  published        Boolean
  createdAt        DateTime @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime @default(now()) @db.Timestamptz(6)
  videoId          String?

  genres Genre[]
  video  Media?  @relation(fields: [videoId], references: [id])

  @@index([id, createdAt])
  @@map("movie")
}

model TvShow {
  id               String   @id
  title            String
  original_title   String
  overview         String?
  release_date     String
  poster_image     String?
  background_image String?
  published        Boolean
  createdAt        DateTime @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime @default(now()) @db.Timestamptz(6)
  genres           Genre[]
  seasons          Season[]

  @@index([id, createdAt])
  @@map("tvshow")
}

model Season {
  id              String    @id
  title           String
  season_number   Int
  season_overview String?
  poster_image    String?
  release_date    String?
  isPublished     Boolean   @default(false)
  createdAt       DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime  @default(now()) @db.Timestamptz(6)
  tvshowId        String?
  episodes        Episode[]
  tvshow          TvShow?   @relation(fields: [tvshowId], references: [id])

  @@index([id, createdAt])
  @@map("season")
}

model Episode {
  id               String   @id
  title            String
  episode_number   Int
  release_date     String?
  seasonId         String?
  createdAt        DateTime @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime @default(now()) @db.Timestamptz(6)
  overview         String?
  background_image String?
  isPublished      Boolean  @default(false)
  videoId          String?
  season           Season?  @relation(fields: [seasonId], references: [id])
  video            Media?   @relation(fields: [videoId], references: [id])

  @@index([id, createdAt])
  @@map("episode")
}

model Genre {
  id        String   @id
  title     String
  movieId   String?
  tvShowId  String?
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  tvshow TvShow? @relation(fields: [tvShowId], references: [id])
  movie  Movie?  @relation(fields: [movieId], references: [id])

  @@index([id, createdAt])
  @@map("genre")
}

model Media {
  id        String    @id @default(cuid())
  title     String
  type      String
  format    String
  link      String
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  episode   Episode[]
  movie     Movie[]

  @@index([id, createdAt])
  @@map("media")
}
